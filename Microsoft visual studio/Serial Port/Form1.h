#pragma once
#define WIN32_LEAN_AND_MEAN
#include "pch.h"
#include <windows.h> 
#include <iostream>
#include <string>
#include "My libraries/Serial_Port.h"

// cat
uint8_t Logo[] = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x55, 0x07, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0x07, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xfd, 0x07, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xfd, 0x05, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0x07, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x5c, 0x5d, 0x07, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x0c, 0x06, 0x00,
0x00, 0x00, 0x00, 0x04, 0x00, 0x0c, 0x0c, 0x06, 0x00,
0x00, 0x00, 0x00, 0x06, 0x00, 0x0c, 0x0c, 0x06, 0x00,
0x00, 0x00, 0x00, 0x06, 0x00, 0x0c, 0x0c, 0x06, 0x00,
0x00, 0x00, 0x00, 0x06, 0x00, 0x0c, 0x0c, 0x06, 0x00,
0x00, 0x00, 0x00, 0x06, 0x00, 0x0c, 0x04, 0x04, 0x00,
0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0x00, 0x02, 0x00,
0x00, 0xfc, 0xff, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0xfc, 0xff, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x54, 0x55, 0x07, 0x00, 0x1c, 0xd0, 0x01, 0x00,
0x00, 0x00, 0x00, 0x06, 0x00, 0x08, 0xf0, 0x03, 0x00,
0x00, 0x00, 0x00, 0x06, 0x00, 0x1c, 0x7c, 0x07, 0x00,
0x00, 0x00, 0x00, 0x06, 0x00, 0x0c, 0x08, 0x02, 0x00,
0x00, 0x00, 0x00, 0x06, 0x00, 0x0c, 0x1c, 0x06, 0x00,
0x00, 0x00, 0x00, 0x02, 0x00, 0x0c, 0x0e, 0x06, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x07, 0x06, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x06, 0x02, 0x00,
0x00, 0xfc, 0xff, 0x07, 0x00, 0xf8, 0x07, 0x07, 0x00,
0x00, 0xfc, 0xff, 0x07, 0x00, 0xe0, 0x01, 0x00, 0x00,
0x00, 0x0c, 0x0c, 0x06, 0x00, 0x40, 0x00, 0x00, 0x00,
0x00, 0x0c, 0x0c, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00,
0x00, 0x0c, 0x0c, 0x04, 0x00, 0x00, 0x00, 0x06, 0x00,
0x00, 0x0c, 0x0c, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00,
0x00, 0x0c, 0x0c, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00,
0x00, 0x0c, 0x0c, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00,
0x00, 0x0c, 0x04, 0x06, 0x00, 0xdc, 0xdf, 0x07, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0x07, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x55, 0x07, 0x00,
0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00,
0x00, 0x1c, 0xf0, 0x01, 0x00, 0x00, 0x00, 0x06, 0x00,
0x00, 0x08, 0xf8, 0x03, 0x00, 0x00, 0x00, 0x06, 0x00,
0x00, 0x1c, 0x1c, 0x07, 0x00, 0x00, 0x00, 0x06, 0x00,
0x00, 0x0c, 0x0c, 0x06, 0x00, 0x00, 0x00, 0x02, 0x00,
0x00, 0x0c, 0x0c, 0x06, 0x00, 0x40, 0x1f, 0x00, 0x00,
0x00, 0x08, 0x0e, 0x06, 0x00, 0xe0, 0xff, 0x00, 0x00,
0x00, 0x1c, 0x07, 0x07, 0x00, 0xf0, 0xff, 0x01, 0x00,
0x00, 0xb8, 0x03, 0x02, 0x00, 0x38, 0x80, 0x03, 0x00,
0x00, 0xf0, 0x01, 0x05, 0x00, 0x1c, 0x00, 0x07, 0x00,
0x00, 0xa0, 0x00, 0x00, 0x00, 0x08, 0x00, 0x02, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x07, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x06, 0x00,
0x00, 0x54, 0x55, 0x05, 0x00, 0x0c, 0x00, 0x06, 0x00,
0x00, 0xfc, 0xff, 0x07, 0x00, 0x08, 0x00, 0x06, 0x00,
0x00, 0xfc, 0xff, 0x07, 0x00, 0x1c, 0x00, 0x07, 0x00,
0x00, 0x00, 0x08, 0x00, 0x00, 0x18, 0x00, 0x03, 0x00,
0x00, 0x00, 0x1e, 0x00, 0x00, 0x78, 0xc0, 0x03, 0x00,
0x00, 0x80, 0x3b, 0x00, 0x00, 0xe0, 0xfb, 0x01, 0x00,
0x00, 0xc0, 0x73, 0x00, 0x00, 0xc0, 0x7f, 0x01, 0x00,
0x00, 0xe0, 0xe0, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00,
0x00, 0x70, 0xc0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x38, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00,
0x00, 0x1c, 0x00, 0x07, 0x00, 0x00, 0xd0, 0x07, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x03, 0x00,
0x00, 0x00, 0x00, 0x04, 0x00, 0xc0, 0x7f, 0x00, 0x00,
0x00, 0x00, 0x00, 0x06, 0x00, 0xf8, 0x03, 0x00, 0x00,
0x00, 0x00, 0x00, 0x06, 0x00, 0x7c, 0x01, 0x00, 0x00,
0x00, 0x00, 0x00, 0x06, 0x00, 0x0c, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x06, 0x00, 0xfc, 0x05, 0x00, 0x00,
0x00, 0x00, 0x00, 0x06, 0x00, 0xa0, 0x2f, 0x00, 0x00,
0x00, 0xfc, 0xff, 0x07, 0x00, 0x00, 0xff, 0x01, 0x00,
0x00, 0xfc, 0xff, 0x07, 0x00, 0x00, 0xe0, 0x07, 0x00,
0x00, 0x54, 0x54, 0x06, 0x00, 0x00, 0xc0, 0x07, 0x00,
0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0xf8, 0x03, 0x00,
0x00, 0x00, 0x00, 0x06, 0x00, 0xc0, 0x7f, 0x01, 0x00,
0x00, 0x00, 0x00, 0x06, 0x00, 0xe8, 0x0b, 0x00, 0x00,
0x00, 0x00, 0x00, 0x06, 0x00, 0x7c, 0x01, 0x00, 0x00,
0x00, 0x00, 0x00, 0x02, 0x00, 0x3c, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x01, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x0f, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x01, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x03, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x07, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x07, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xa8, 0x3e, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x07, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xa8, 0x0e, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x07, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
};
// test image 
uint8_t Logo2[] = { 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xef,0xdf,0xef,0xfd,0x7d,0xdf,
0xbd,0xed,0x7e,0xff,0xfe,0xff,0xdf,0xff,0xff,0xff,0xff,0xef,0xfb,0x77,0xbb,
0xff,0xfb,0x7b,0xdb,0xbf,0xfd,0xdf,0xff,0xff,0xfd,0xbf,0xff,0xff,0xf6,0xdf,
0xff,0xde,0xf7,0x6f,0xff,0xef,0xff,0x7f,0xf7,0xfb,0xff,0xbe,0xff,0xff,0xfd,
0x6d,0xed,0xff,0xdf,0xfd,0xff,0xfd,0xf7,0xbf,0xff,0xff,0x7d,0xff,0xef,0xfb,
0xff,0xff,0xff,0xd7,0x77,0xdf,0xbb,0x7f,0xdf,0x6f,0xef,0x6e,0x7f,0xfd,0xf7,
0xff,0xfd,0xff,0xfe,0xff,0xff,0xdd,0xdf,0xff,0xef,0xef,0xfb,0xff,0xfe,0xff,
0x77,0xf5,0x7d,0xff,0x7f,0xdf,0xfd,0xef,0x7d,0x9b,0xbe,0xdf,0xbb,0xfd,0xff,
0xef,0xff,0xdf,0x4d,0xeb,0xfb,0xff,0xef,0xbb,0xff,0xbf,0xfb,0x26,0x74,0xff,
0xef,0xff,0xff,0xdf,0xfb,0x7f,0x93,0xda,0xef,0x7f,0xdf,0xee,0xfb,0xff,0xaf,
0x04,0xf4,0xbd,0xfb,0xfb,0x7f,0xbf,0xff,0x7d,0x03,0x60,0xff,0xff,0xff,0xfd,
0xff,0xdf,0xb7,0x10,0xd9,0x7b,0x6f,0xb7,0xef,0xf7,0xff,0x2b,0x00,0xe0,0xdf,
0xff,0xff,0x7f,0xff,0x7d,0x5d,0x09,0xa8,0xfe,0xfb,0xfe,0xfd,0xff,0xff,0x07,
0x44,0xe0,0xfb,0xdf,0xb7,0xef,0xde,0xbb,0xa0,0x22,0x90,0x6f,0xff,0xff,0xff,
0xff,0xff,0x12,0x11,0xc0,0xfe,0x7b,0xff,0xde,0xbb,0x5f,0x44,0x04,0xa0,0xff,
0xff,0xb7,0xf7,0xff,0xaf,0x8a,0x0a,0x40,0xb7,0xef,0xfe,0xbf,0xff,0x3f,0x50,
0x10,0x82,0xfd,0xff,0xff,0xfd,0xfd,0x4d,0x0a,0x09,0x80,0x7f,0xbb,0xb7,0xff,
0xef,0x17,0x41,0x88,0x0a,0xef,0xff,0xff,0xef,0xff,0x2b,0x28,0x12,0x80,0xfd,
0xef,0xfd,0xfd,0x7e,0x87,0x04,0x41,0x03,0xdf,0xff,0xbf,0xdf,0xff,0x23,0xa2,
0x88,0x00,0xfa,0x7b,0xf7,0xfb,0xf7,0x0b,0x09,0x62,0x00,0xbf,0xff,0x7f,0xff,
0x7f,0x41,0xa0,0x88,0x00,0xf6,0xef,0xed,0xdf,0xfe,0x12,0x15,0x63,0x00,0xfe,
0xff,0xff,0xfb,0x7f,0x09,0x88,0x90,0x00,0xba,0xbb,0x7f,0xff,0x77,0x20,0x65,
0x46,0x20,0xfe,0xff,0xee,0xef,0xbf,0x84,0x10,0x29,0x00,0xdc,0xef,0xff,0x7d,
0x6f,0x50,0xcd,0xa2,0x14,0x7a,0xff,0xdb,0xff,0x3f,0x22,0x22,0x49,0x00,0xfc,
0x7b,0x7f,0xef,0x1e,0x95,0xc4,0x26,0x0d,0xec,0xff,0xff,0xff,0x57,0x48,0x29,
0x98,0x00,0x7c,0xef,0xed,0xdb,0x0f,0x25,0x86,0x26,0x05,0xf4,0xff,0x7f,0xff,
0x4b,0x58,0x59,0xc9,0x00,0xd8,0xbb,0xff,0xff,0x8f,0x86,0x04,0x34,0x02,0xfc,
0xff,0xee,0xee,0x46,0x71,0x75,0x48,0x05,0x78,0xef,0xff,0xff,0x13,0x8a,0x0a,
0xa5,0x20,0xe8,0xff,0xdd,0xdd,0x2b,0x61,0x65,0x50,0x02,0xf8,0x7b,0xff,0xff,
0x45,0x96,0x9a,0x2a,0x01,0xd8,0xff,0xb7,0xfb,0x32,0x49,0x75,0xd1,0x04,0xf0,
0xef,0xff,0x7f,0x81,0xa4,0x0a,0x24,0x02,0xf8,0xff,0xfd,0xde,0x55,0x46,0xf5,
0x51,0x09,0xd8,0xbb,0xdf,0xff,0x00,0x10,0x0b,0xac,0x04,0xf0,0xff,0xfb,0x77,
0x55,0xbd,0xfc,0x41,0x02,0xb8,0x6f,0xff,0xbe,0x20,0x40,0x29,0xb6,0x18,0xe8,
0xff,0xdf,0xff,0x8a,0xba,0xd6,0x49,0x05,0xf8,0xfb,0xfb,0x77,0x65,0x00,0x79,
0xb7,0x40,0xfa,0x7f,0xff,0xbe,0x90,0x89,0x96,0x48,0x06,0xbc,0xef,0xdf,0x7f,
0x45,0x52,0x68,0xb7,0x19,0xea,0xff,0xfb,0xb7,0x12,0x25,0xb5,0x49,0x64,0xff,
0x7b,0xff,0x7e,0x01,0x88,0x48,0xb6,0x8a,0x7a,0xff,0xdf,0x9f,0x54,0x21,0xb5,
0x4b,0x79,0xdf,0xef,0xfe,0x7f,0x02,0x4a,0x42,0x94,0x06,0xfb,0xff,0xf7,0x2e,
0x49,0x11,0x39,0x0b,0xdd,0xff,0xbb,0xff,0xbf,0x24,0x44,0x85,0x14,0xa6,0xdd,
0xff,0xdd,0x3d,0x82,0x28,0x6a,0x29,0xf8,0xf7,0xef,0xff,0xaf,0x14,0x02,0x11,
0x86,0xd0,0xbe,0xff,0xb7,0x5f,0x02,0xa0,0xae,0x19,0xe8,0xff,0x7b,0xff,0x3f,
0xa5,0x04,0x40,0x44,0xb4,0xdb,0xff,0xff,0xad,0x00,0x82,0xba,0x2a,0xf8,0xff,
0xdf,0xf6,0x5f,0x22,0x28,0x04,0x9a,0xd2,0xf6,0xff,0xaf,0x3f,0x89,0x02,0xe9,
0x22,0xfc,0x7f,0xfb,0x55,0xad,0x20,0x18,0x04,0x5d,0xb1,0xdd,0xbf,0xef,0x5e,
0x44,0x42,0x22,0x22,0xec,0xff,0xf7,0x37,0xb3,0x10,0x28,0x89,0x55,0x75,0xf7,
0xff,0xcd,0x4d,0x45,0x81,0x44,0xaa,0xda,0xdf,0xff,0xaf,0x76,0x28,0x02,0x0a,
0x51,0xe4,0xfb,0xbb,0x5f,0x89,0x55,0xa9,0x94,0xa4,0xfb,0xfe,0xff,0xcd,0xef,
0x2a,0x00,0x22,0x52,0xa4,0xdf,0xf7,0x5f,0x11,0x15,0x5c,0x59,0xa5,0xdb,0xfb,
0xff,0x9b,0xfe,0x28,0x22,0x24,0x10,0xe4,0xbf,0xbf,0xdf,0x11,0x17,0x9c,0x89,
0xc5,0x93,0xf6,0xfb,0x3f,0xaf,0x48,0x43,0x72,0x32,0xc8,0x7f,0x7f,0x9f,0x50,
0x16,0x18,0x09,0x81,0xa6,0xed,0xf7,0x7f,0xaf,0xa9,0xc5,0x65,0x52,0x99,0xff,
0xff,0x2d,0x10,0x8e,0x32,0x9a,0xa9,0x42,0xdf,0xbf,0xbf,0xe6,0x41,0x81,0x47,
0x04,0xbc,0x77,0xfb,0x7f,0x19,0x0f,0xfb,0xb8,0xa2,0x02,0xfd,0xff,0x5f,0xe4,
0x02,0x40,0x17,0x19,0x80,0xff,0xf7,0x3d,0x01,0x05,0xbb,0xd9,0x86,0x2e,0xaf,
0xbf,0x7f,0x08,0x44,0xe4,0x25,0x49,0xe0,0xfd,0xff,0x3b,0xe3,0x0a,0xab,0x3e,
0x26,0x16,0xff,0xff,0xbf,0x04,0x09,0xd1,0x53,0x19,0xc9,0x6f,0xbb,0x3f,0x9a,
0x36,0xe8,0x2e,0xa4,0x34,0xfd,0xff,0x1b,0x48,0xd9,0x74,0xd5,0x1c,0xc9,0xdf,
0xf7,0xbf,0x22,0x26,0xf8,0x2f,0xa1,0x24,0xfb,0x7f,0x1f,0x08,0x59,0xaa,0xba,
0x5c,0x9a,0xff,0xff,0x9f,0xa2,0xa4,0xf0,0x2f,0x23,0x6d,0xdf,0xf7,0x2f,0x18,
0x5a,0x2a,0x7d,0xf8,0xd0,0xfb,0xff,0x1d,0x46,0x2d,0xc0,0x97,0x03,0x6f,0xbf,
0xbf,0x8f,0xc1,0x76,0x89,0x7f,0xf8,0xd0,0xef,0xf7,0x5f,0xaa,0x9b,0x74,0x9d,
0x43,0xef,0xfe,0xff,0x2b,0x61,0x7f,0x9c,0x6f,0xf5,0xa2,0xf7,0xff,0x1f,0x10,
0x86,0xfe,0xbf,0x21,0xfd,0x7f,0x77,0xaf,0x92,0x41,0xae,0xb7,0xdc,0xe6,0xdd,
0xff,0x0f,0xed,0x14,0xf9,0x5e,0x63,0xbb,0xff,0xff,0x6b,0x52,0xc1,0xd6,0xef,
0x85,0xed,0xf7,0xf7,0x9f,0xad,0x10,0xf9,0xbf,0x72,0xfb,0x7e,0x7f,0x47,0xf2,
0xc0,0xae,0x4d,0x85,0xb5,0xef,0xff,0x2f,0x0d,0x29,0xfd,0xb7,0x73,0xee,0xfd,
0xf7,0x47,0xf2,0x44,0xf6,0x5f,0xa5,0xf1,0xdf,0xff,0xab,0x8d,0xa1,0xde,0x0d,
0xd3,0x6e,0xf7,0xbf,0x17,0xf2,0x3a,0xfb,0xdf,0x7d,0xf1,0x7f,0xff,0xe3,0x9d,
0x55,0xfc,0x0a,0xd2,0xea,0xfd,0xf7,0x1d,0x62,0x0a,0xb7,0x97,0x69,0x75,0xdf,
0xff,0xe2,0xbd,0xd1,0xfc,0x4d,0x95,0xf2,0xf7,0x7f,0x19,0x43,0x49,0xba,0x96,
0x70,0xe5,0xbf,0xff,0xee,0xfc,0xa4,0x5d,0x67,0xdd,0xba,0xfd,0x37,0x52,0x27,
0x71,0xf0,0x93,0x28,0xe5,0xff,0xbf,0xbd,0xd4,0xd3,0x6b,0x69,0xde,0xca,0xdb,
0xbf,0x56,0x7b,0xe0,0xb0,0x13,0x35,0x75,0xff,0x5f,0xbb,0x84,0xab,0x6b,0xad,
0x4a,0xca,0xbf,0xd7,0xd6,0x73,0x41,0xd3,0x42,0xb7,0xa5,0xf6,0x5f,0x3b,0x9c,
0xcc,0x68,0xad,0x4b,0xca,0xff,0xdf,0xd4,0xcb,0x93,0x37,0xc2,0xa6,0x91,0xdf,
0x7f,0xeb,0x24,0x2c,0x98,0x69,0x79,0x86,0xfd,0xff,0x3f,0x91,0x93,0x47,0xd4,
0x86,0x29,0xb7,0xf7,0xed,0x42,0xec,0x3a,0x3a,0x79,0x81,0xff,0xff,0xff,0xb5,
0xfa,0x2f,0xcd,0xa4,0x54,0xff,0xdf,0xdf,0xff,0xff,0xfe,0x32,0x5d,0x03,0xdb,
0xff,0xff,0xfb,0xf7,0x7f,0xcd,0xa2,0x28,0xff,0xff,0xfd,0xff,0xff,0xef,0x77,
0x5d,0x53,0xff,0xf7,0xff,0xf7,0xff,0xff,0xdf,0xa7,0x08,0xdb,0xff,0xdf,0xff,
0x7f,0xff,0xfe,0x5d,0x45,0xff,0xbf,0xff,0xbf,0xff,0xff,0xb7,0xbf,0x2a,0xfe,
0xff,0xbf,0xff,0xff,0xef,0xff,0x5b,0x15,0xf7,0xff,0xfd,0xff,0xfb,0xff,0xff,
0xbf,0x48,0xbe,0xf7,0xff,0xfd,0xff,0xff,0xbe,0x7f,0x23,0xff,0xff,0xfb,0xff,
0xff,0xfe,0xff,0xaf,0x14,0xf7,0xdf,0xff,0xdf,0xff,0xff,0x7b,0x7f,0xcb,0xbe,
0xff,0xbf,0xff,0xfb,0xef,0xff,0xff,0x14,0xff,0x7f,0xff,0xff,0xff,0xff,0xf7,
0x5d,0xeb,0xf6,0xf7,0xff,0xfe,0x7f,0xbf,0xff,0xff,0x15,0xff,0xff,0xfb,0xdf,
0xff,0xff,0xbf,0xff,0xea,0xbf,0xff,0xff,0xff,0xff,0x7f,0xff,0xdf,0x57,0xfb,
0xbf,0xef,0xff,0xfd,0xfd,0xff,0xfd,0xfb,0xff,0xff,0xff,0xfe,0xff,0xff,0xee,
0xbf,0x6f,0x77,0xf7,0xfe,0xff,0xff,0xf7,0xff,0xff,0xff,0xff,0xff,0xff,0xf7,
0xf7,0xff,0xdf,0x7b,0xef,0xee,0xff,0xef,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
0xbf,0xff,0xef,0xef,0xdf,0xbd,0xf7,0xfd,0xff,0xff,0xbf,0xff,0xff,0xff,0xff,
0xff,0x7f,0xb7,0xf7,0xfd,0xff,0x7f,0xff,0xfb,0xbe,0xef,0xff,0xff,0x7f,0xdf,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xbe,0xff,0xf7,0xfd,0xbe,
0xbf,0xf7,0x7f,0xff,0xff,0xbb,0xff,0xef,0xf7,0xff,0xff,0xfd,0xef,0xfd,0xff,
0xdf,0xff,0xff,0xf7,0xff,0xff,0xff,0xff,0xff,0xfd,0xfe,0xbe,0x7f,0xef,0xff,
0xff,0xbf,0xfb,0xff,0xef,0xff,0xff,0xff,0xef,0xff,0xff,0xbf,0xff,0xff,0xf7,
0xff,0x7e,0xff,0xff,0xfe,0xff,0xdb,0xbe,0x7f,0xef,0xff,0xff,0xfd,0xff,0xfb,
0xff,0xff,0xef,0xff,0xff,0xff,0xff,0xbd,0xbf,0xff,0xfd,0xfd,0xff,0xef,0xef,
0xff,0xff,0xff,0xff,0xef,0xff,0xef,0xfe,0xfe,0xfb,0xff,0xff,0x6d,0xff,0x7f,
0xff,0xff,0xff,0xff,0xff,0xdd,0xff,0xdf,0xed,0xff,0xff,0xff,0xf7,0xef,0xff,
0xff,0xfb,0xff,0xef,0xef,0xdf,0xff,0xfe,0xff,0xff,0xff,0xff,0xff,0xfe,0xfe,
0xff,0xdf,0xbb,0x6d,0xbf,0xef,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfb,0x7d,
0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
0xff,0xff,0xff
}; // 


namespace CppCLRWinFormsProject {

    using namespace System;
    using namespace System::ComponentModel;
    using namespace System::Collections;
    using namespace System::Windows::Forms;
    using namespace System::Data;
    using namespace System::Drawing;
    using namespace std;
    using namespace System::Threading;

    public ref class Form1 : public System::Windows::Forms::Form
    {
    public:
        SerialPort* serial_port;

        Form1(void)
        {
            InitializeComponent();
            serial_port = new SerialPort();
        }
    protected:
        ~Form1()
        {
            if (components)
            {
                delete components;
            }
        }

    protected:
    private: System::Windows::Forms::OpenFileDialog^ openFileDialog1;
    private: System::Windows::Forms::Button^ Connect;
    private: System::Windows::Forms::TextBox^ textbox;
    private: System::Windows::Forms::Button^ Send;
    private: System::Windows::Forms::Button^ Receive;
    private: System::Windows::Forms::Button^ Disconect;
    private: System::Windows::Forms::Button^ Send_2;
    private: System::ComponentModel::Container^ components;

#pragma region Windows Form Designer generated code
           /// <summary>
           /// Required method for Designer support - do not modify
           /// the contents of this method with the code editor.
           /// </summary>
           void InitializeComponent(void)
           {
               this->Connect = (gcnew System::Windows::Forms::Button());
               this->textbox = (gcnew System::Windows::Forms::TextBox());
               this->Send = (gcnew System::Windows::Forms::Button());
               this->Receive = (gcnew System::Windows::Forms::Button());
               this->Disconect = (gcnew System::Windows::Forms::Button());
               this->Send_2 = (gcnew System::Windows::Forms::Button());
               this->SuspendLayout();
               // 
               // Connect
               // 
               this->Connect->Location = System::Drawing::Point(12, 12);
               this->Connect->Name = L"Connect";
               this->Connect->Size = System::Drawing::Size(94, 43);
               this->Connect->TabIndex = 14;
               this->Connect->Text = L"Connect";
               this->Connect->UseVisualStyleBackColor = true;
               this->Connect->Click += gcnew System::EventHandler(this, &Form1::Connect_Click);
               // 
               // textbox
               // 
               this->textbox->Location = System::Drawing::Point(12, 61);
               this->textbox->Multiline = true;
               this->textbox->Name = L"textbox";
               this->textbox->Size = System::Drawing::Size(193, 161);
               this->textbox->TabIndex = 15;
               this->textbox->TextChanged += gcnew System::EventHandler(this, &Form1::textbox_TextChanged);
               // 
               // Send
               // 
               this->Send->Location = System::Drawing::Point(12, 228);
               this->Send->Name = L"Send";
               this->Send->Size = System::Drawing::Size(94, 43);
               this->Send->TabIndex = 16;
               this->Send->Text = L"Send image #1";
               this->Send->UseVisualStyleBackColor = true;
               this->Send->Click += gcnew System::EventHandler(this, &Form1::Send_Click);
               // 
               // Receive
               // 
               this->Receive->Location = System::Drawing::Point(112, 252);
               this->Receive->Name = L"Receive";
               this->Receive->Size = System::Drawing::Size(93, 43);
               this->Receive->TabIndex = 17;
               this->Receive->Text = L"Receive";
               this->Receive->UseVisualStyleBackColor = true;
               this->Receive->Click += gcnew System::EventHandler(this, &Form1::Receive_Click);
               // 
               // Disconect
               // 
               this->Disconect->Location = System::Drawing::Point(112, 12);
               this->Disconect->Name = L"Disconect";
               this->Disconect->Size = System::Drawing::Size(93, 43);
               this->Disconect->TabIndex = 18;
               this->Disconect->Text = L"Disconnect";
               this->Disconect->UseVisualStyleBackColor = true;
               this->Disconect->Click += gcnew System::EventHandler(this, &Form1::Clear_Click);
               // 
               // Send_2
               // 
               this->Send_2->Location = System::Drawing::Point(12, 277);
               this->Send_2->Name = L"Send_2";
               this->Send_2->Size = System::Drawing::Size(94, 42);
               this->Send_2->TabIndex = 19;
               this->Send_2->Text = L"Send image #2";
               this->Send_2->UseVisualStyleBackColor = true;
               this->Send_2->Click += gcnew System::EventHandler(this, &Form1::Send_2_Click);
               // 
               // Form1
               // 
               this->AutoScaleDimensions = System::Drawing::SizeF(6, 13);
               this->AutoScaleMode = System::Windows::Forms::AutoScaleMode::Font;
               this->ClientSize = System::Drawing::Size(225, 379);
               this->Controls->Add(this->Send_2);
               this->Controls->Add(this->Disconect);
               this->Controls->Add(this->Receive);
               this->Controls->Add(this->Send);
               this->Controls->Add(this->textbox);
               this->Controls->Add(this->Connect);
               this->Name = L"Form1";
               this->Text = L"Serial Port";
               this->ResumeLayout(false);
               this->PerformLayout();

           }
#pragma endregion

    private: void  ReadSerialDataInBackground() {

        System::String^ incomingData = serial_port->ReadSerialPort();
        if (!String::IsNullOrEmpty(incomingData)) {
            textbox->Invoke(gcnew Action<String^>(this, &Form1::UpdateTextBox), incomingData);
        }

    } // end of ReadSerialDataInBackground_moj
    private: void  Run_Thread_Connect()
    {
        const wchar_t* portName = L"\\\\.\\COM6"; // Port selected by user
        if (!serial_port->OpenSerialPort(portName)) {
            serial_port->Text = "Error: Serial port doesn't open!";

            return;
        }

        if (!serial_port->SetupSerialPort())
        {
            serial_port->CloseSerialPort();
            serial_port->Text = "Error: Configured port without success!";
            //  CloseSerialPort();
            return;
        }

        serial_port->Text = "Serial port configred and openned";
    } // end of Run_Thread_Connect
    private: void UpdateTextBox(String^ data) {
        textbox->Text += "\r\nReceived data: \r\n" + data;
    } // end of UpdateTextBox_moj
    private: System::Void Connect_Click(System::Object^ sender, System::EventArgs^ e)
    {
        System::Threading::Thread^ serialThread = gcnew System::Threading::Thread(gcnew System::Threading::ThreadStart(this, &Form1::Run_Thread_Connect));
        serialThread->IsBackground = true;
        serialThread->Start();
        serialThread->Join();
        textbox->Text = serial_port->ConvertToSystemString(serial_port->Text);



    }// end of Connect_Click
    private: System::Void Receive_Click(System::Object^ sender, System::EventArgs^ e) {
        textbox->Text = "Waitting for data...\n";

        System::Threading::Thread^ serialThread = gcnew System::Threading::Thread(gcnew System::Threading::ThreadStart(this, &Form1::ReadSerialDataInBackground));
        serialThread->IsBackground = true;
        serialThread->Start();
    }// end of odbior_moj_Click
    private: System::Void Send_Click(System::Object^ sender, System::EventArgs^ e) {
        textbox->Text = "Data are sending...\n";
        System::Threading::Thread^ serialThread = gcnew System::Threading::Thread(gcnew System::Threading::ThreadStart(this, &Form1::run_thread_SendSerialDataInBackground));
        serialThread->IsBackground = true;
        serialThread->Start();
        serialThread->Join();

        textbox->Text = serial_port->ConvertToSystemString(serial_port->Text);




    } // end of Send_moj_Click
    private: void run_thread_SendSerialDataInBackground()
    {
        serial_port->SendSerialDataInBackground(Logo, sizeof(Logo));

    } // end of run_thread_SendSerialDataInBackground
    private: void run_thead_Close_Serial_Port()
    {
        serial_port->CloseSerialPort();
    } // end of run_thead_Close_Serial_Port
    private: System::Void Clear_Click(System::Object^ sender, System::EventArgs^ e) {
        System::Threading::Thread^ sendThread = gcnew System::Threading::Thread(gcnew System::Threading::ThreadStart(this, &Form1::run_thead_Close_Serial_Port));
        sendThread->Start();
        sendThread->Join();
        textbox->Text = "Serial port disconnected";

    } // end of Clear_Click
    private: void run_thread_SendSerialDataInBackground_2()
    {
        serial_port->SendSerialDataInBackground(Logo2, sizeof(Logo2));

    } // end of run_thread_SendSerialDataInBackground_2
    private: System::Void Send_2_Click(System::Object^ sender, System::EventArgs^ e) {
        textbox->Text = "Data are sending...\n";
        System::Threading::Thread^ serialThread = gcnew System::Threading::Thread(gcnew System::Threading::ThreadStart(this, &Form1::run_thread_SendSerialDataInBackground_2));
        serialThread->IsBackground = true;
        serialThread->Start();
        serialThread->Join();
        textbox->Text = serial_port->ConvertToSystemString(serial_port->Text);
    }
    private: System::Void textbox_TextChanged(System::Object^ sender, System::EventArgs^ e) {
    }
    }; // end of class Form1
} // end of namespace CppCLRWinFormsProject

